apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "erigon.fullname" . }}
  labels:
    {{- include "erigon.labels" . | nindent 4 }}
spec:
  {{- if .Values.podManagementPolicy }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  {{- end }}
  serviceName: {{ include "erigon.fullname" . }}
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "erigon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "erigon.selectorLabels" . | nindent 8 }}
    spec:
      shareProcessNamespace: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "erigon.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- if .Values.customGenesis }}
        - name: {{ .Chart.Name }}-genesis-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - mountPath: {{ .Values.erigon.datadir }}
            name: data
          command:
            - /bin/sh
            - -c
            - |
              if test -d "{{ .Values.erigon.datadir }}/chaindata"; then
                echo "Erigon data already present."
              else
                echo "Erigon not initialized."
                wget -O genesis.json {{ .Values.customGenesis }}
                erigon init genesis.json --datadir {{ .Values.erigon.datadir }}
              fi
      {{- end }}
      containers:
        {{- if .Values.erigon.enabled }}
        - name: {{ .Chart.Name }}-backend
          securityContext:
            {{- toYaml .Values.erigon.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: {{ .Values.erigon.datadir }}
              name: data
          {{- if .Values.jwtSecret }}
            - name: jwt-secret
              mountPath: /jwt-secret
          {{- end }}
          command:
            - erigon
          args:
            - --datadir={{ .Values.erigon.datadir }}
            - --port={{ .Values.service.p2p.port }}
            - --metrics
            - --metrics.addr=0.0.0.0
            - --metrics.port=6060
            - --private.api.addr=0.0.0.0:9090
            - --http.addr=0.0.0.0
            - --http.corsdomain=*
            - --http.vhosts=*
            - --authrpc.addr=0.0.0.0
            - --authrpc.vhosts=*
            - --http.api=eth,net,web3,erigon,engine,trace
          {{- if .Values.jwtSecret }}
            - --authrpc.jwtsecret=/jwt-secret/jwt
          {{- end }}
          {{- range $key, $value := .Values.erigon.extraArgs }}
            {{- /* Accept keys without values or with false as value */}}
            {{- if eq ($value | quote | len) 2 }}
            - --{{ $key }}
            {{- else }}
            - --{{ $key }}={{ $value }}
            {{- end }}
          {{- end }}
          ports:
            - name: p2p-tcp
              containerPort: {{ .Values.service.p2p.port }}
              protocol: TCP
            {{- if .Values.service.p2p.enableHostPort }}
              hostPort: {{ .Values.service.p2p.port }}
            {{- end }}
            - name: p2p-udp
              containerPort: {{ .Values.service.p2p.port }}
              protocol: UDP
            {{- if .Values.service.p2p.enableHostPort }}
              hostPort: {{ .Values.service.p2p.port }}
            {{- end }}
            - name: metrics
              containerPort: 6060
            - name: pprof
              containerPort: 6061
            - name: private-api
              containerPort: 9090
            - name: http-rpc
              containerPort: 8545
          resources:
            {{- toYaml .Values.erigon.resources | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- if .Values.erigon.enabled }}
      volumes:
        {{- if .Values.jwtSecret }}
        - name: jwt-secret
          secret:
            secretName: {{ .Values.jwtSecret }}
        {{- end }}
  {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
  {{- else if .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            {{- with .Values.persistence.existingClaim }}
            claimName: {{ tpl . $ }}
            {{- end }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "erigon.selectorLabels" . | nindent 10 }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
        {{- end }}
  {{- end }}
{{- end }}
